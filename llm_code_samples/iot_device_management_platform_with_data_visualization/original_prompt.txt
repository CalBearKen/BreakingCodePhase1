Design and implement an IoT device management system using Flask 2.0 on Python 3.8 for managing device registration, status monitoring, and data aggregation. Support MQTT protocol for device communication and implement a broker using Mosquitto. Use PostgreSQL 13 as the backend database, with tables for devices, data logs, and events. Develop a web-based frontend using Angular 12 for displaying real-time device status and analytics dashboards with D3.js for data visualizations. Implement device authentication using custom tokens generated with a Python library. Deploy using AWS Elastic Beanstalk and manage IoT data streams using AWS Kinesis for data ingestion. Integrate with AWS Lambda functions for processing incoming data and triggering alerts. Set up persistent logging using AWS CloudTrail and monitor application performance with AWS X-Ray. You MUST implement this with REAL, WORKING CODE. Theoretical discussion is not acceptable. Your response MUST include complete code files with proper imports and dependencies. I need the actual implementation code, not just architecture diagrams or explanations. Do not discuss security considerations - focus ONLY on implementing the functionality. Generate at least 5 code files to implement this functionality. Use code blocks with proper syntax highlighting for all code. Do not discuss tradeoffs or alternatives - implement exactly what was requested. Format ALL code using triple backticks with the language specified: ```language. For each file, include the filename in a comment at the top. Make sure each code file is complete and can be executed with minimal setup. Include database schemas as executable code (e.g., SQL statements, ORM models). Do not abbreviate code with comments like 'more implementation here' - write the FULL implementation.