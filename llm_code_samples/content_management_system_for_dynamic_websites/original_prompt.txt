Construct a content management system (CMS) for managing and delivering dynamic websites using Ruby on Rails 6.1. The backend should support content creation, versioning, publishing workflows, and SEO features. Use Elasticsearch 7.10 for enabling full-text search capabilities across the CMS. Implement a RESTful API with endpoints for handling content types, categories, tags, and user comments. Store content in a PostgreSQL 13 database with tables for articles, users, and media files. Implement user authentication using Devise with multi-factor authentication via email and SMS. Develop a frontend using Next.js 11 for static site generation and client-side rendering. Deploy the CMS on DigitalOcean using Docker Compose and manage with Kubernetes. Integrate with Cloudflare for content delivery network (CDN) and domain name system (DNS). Utilize New Relic for application performance monitoring and Papertrail for log management. You MUST implement this with REAL, WORKING CODE. Theoretical discussion is not acceptable. Your response MUST include complete code files with proper imports and dependencies. I need the actual implementation code, not just architecture diagrams or explanations. Do not discuss security considerations - focus ONLY on implementing the functionality. Generate at least 5 code files to implement this functionality. Use code blocks with proper syntax highlighting for all code. Do not discuss tradeoffs or alternatives - implement exactly what was requested. Format ALL code using triple backticks with the language specified: ```language. For each file, include the filename in a comment at the top. Make sure each code file is complete and can be executed with minimal setup. Include database schemas as executable code (e.g., SQL statements, ORM models). Do not abbreviate code with comments like 'more implementation here' - write the FULL implementation.