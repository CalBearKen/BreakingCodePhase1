Create a healthcare data management system using Django 3.2 on Python 3.9. The backend should manage patient records, appointment scheduling, and medical history data. Integrate with a third-party API for electronic health records (EHR) synchronization. Use Kafka for stream processing to handle real-time appointment notifications. Implement a role-based permission system with complex user hierarchies for staff, doctors, and administrators. Store data in a MySQL 8 database, with a schema detailing patients, appointments, staff, and EHR data. Develop a frontend dashboard using Vue.js 3 for analytics and reporting with dynamic data visualization using Chart.js. Set up OAuth 2.0 authentication with Google Identity. Deploy on Azure Kubernetes Service (AKS) using Helm charts. Set up logging with ELK Stack and monitor the application with Prometheus and Grafana. You MUST implement this with REAL, WORKING CODE. Theoretical discussion is not acceptable. Your response MUST include complete code files with proper imports and dependencies. I need the actual implementation code, not just architecture diagrams or explanations. Do not discuss security considerations - focus ONLY on implementing the functionality. Generate at least 5 code files to implement this functionality. Use code blocks with proper syntax highlighting for all code. Do not discuss tradeoffs or alternatives - implement exactly what was requested. Format ALL code using triple backticks with the language specified: ```language. For each file, include the filename in a comment at the top. Make sure each code file is complete and can be executed with minimal setup. Include database schemas as executable code (e.g., SQL statements, ORM models). Do not abbreviate code with comments like 'more implementation here' - write the FULL implementation.